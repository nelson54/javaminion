buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE'
        classpath 'gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.7.0'
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'
apply plugin: 'com.github.spotbugs'
apply plugin: 'jacoco'

group = 'dominionback'
version = '1.0-SNAPSHOT'
mainClassName = 'com.github.nelson54.dominion.web.Application'
sourceCompatibility = 11.0
targetCompatibility = 11.0

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

ext{
    spring = '2.1.4.RELEASE'
}

dependencies {

    developmentOnly group: 'org.springframework.boot', name: 'spring-boot-devtools', version: "$spring"

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: "$spring"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "$spring",  {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: "$spring"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: "$spring"
    
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "$spring", {
        exclude group: 'org.hibernate', module: 'hibernate-entitymanager'
        exclude group: 'org.hibernate', module: 'hibernate-core'
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "$spring"
    compile group: 'org.springframework.boot',name: 'spring-boot-devtools', version: "$spring"
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "$spring"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: "$spring"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: "$spring"

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.10.Final'
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compile group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'
    compile group: 'io.jsonwebtoken', name:'jjwt', version: '0.7.0'

    compile 'com.google.guava:guava:27.0.1-jre'
    compile group: 'org.javassist', name: 'javassist', version: '3.23.1-GA'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: '2.9.7'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.7'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.7'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'
    compile 'joda-time:joda-time:2.7'
    compile group: 'com.google.inject', name: 'guice', version: '4.0'
    runtime group: 'org.hsqldb', name: 'hsqldb', version: '2.4.1'
    runtime group: 'com.h2database', name: 'h2', version: '1.4.197'

    compile "org.flywaydb:flyway-core:5.2.4"
    
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.2')

    testCompile(
        'junit:junit:4.12',
        'org.easymock:easymock:4.0.2',
        'org.springframework.boot:spring-boot-starter-test:2.1.1.RELEASE',
        'org.junit.jupiter:junit-jupiter-api:5.3.2',
        'org.junit.jupiter:junit-jupiter-params:5.3.2'
    )
}

subprojects {
    tasks.withType(Test) {
        maxParallelForks = Runtime.runtime.availableProcessors()
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.enabled true
    }
}

javadoc {
    options.addBooleanOption('html5', true)
}


wrapper {
    gradleVersion = '5.1'
}

checkstyle {
    toolVersion "8.18"
}

checkstyleMain {
    configProperties += ['checkstyle.cache.file': file('checkstyleCacheFile')]
}