logging.captureStandardOutput LogLevel.INFO

ext {
    springVersion = '2.3.0.RELEASE'
    jacksonVersion = '2.10.2'
    hibernateVersion = '5.2.10.Final'
    guavaVersion = '29.0-jre'
}

buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.3.0.RELEASE'
        //classpath 'gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.7.0'
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'
//apply plugin: 'com.github.spotbugs'
apply plugin: 'jacoco'

group = 'dominionback'
version = '1.2-SNAPSHOT'
mainClassName = 'com.github.nelson54.dominion.Application'
sourceCompatibility = 13.0
targetCompatibility = 13.0


configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"

    developmentOnly group: 'org.springframework.boot', name: 'spring-boot-devtools', version: "$springVersion"

    compileOnly 'org.projectlombok:lombok:1.18.8'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: "$springVersion"

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: "$springVersion"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "$springVersion",  {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }


    compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: "$springVersion"

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "$springVersion"
    compile group: 'org.springframework.boot',name: 'spring-boot-devtools', version: "$springVersion"
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "$springVersion"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: "$springVersion"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: "$springVersion"
    
    compile group: 'org.hibernate', name: 'hibernate-core', version: "$hibernateVersion"
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compile group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'
    compile group: 'io.jsonwebtoken', name:'jjwt', version: '0.7.0'

    compile "com.google.guava:guava:$guavaVersion"
    compile group: 'org.javassist', name: 'javassist', version: '3.23.1-GA'

    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: "$jacksonVersion"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "$jacksonVersion"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "$jacksonVersion"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "$jacksonVersion"

    compile("io.springfox:springfox-swagger2:2.9.2")
    compile("io.springfox:springfox-swagger-ui:2.9.2")
    compileOnly 'org.projectlombok:lombok:1.18.8'

    testRuntime group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta2'

    
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.2')

    testCompile(
        'junit:junit:4.12',
        'org.easymock:easymock:4.0.2',
        "org.springframework.boot:spring-boot-starter-test:$springVersion",
        'org.junit.jupiter:junit-jupiter-api:5.3.2',
        'org.junit.jupiter:junit-jupiter-params:5.3.2'
    )
}

processResources {
    def profile = System.getenv('SPRING_PROFILES_ACTIVE') ?: 'local'
    def projectDir = project.getProjectDir()
    def profileResources = "${projectDir}/environments/${profile}/resources/"

    from(profileResources)
}

subprojects {
    tasks.withType(Test) {
        maxParallelForks = Runtime.runtime.availableProcessors()
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.enabled true
    }
}

javadoc {
    options.addBooleanOption('html5', true)
}


wrapper {
    gradleVersion = '6.3'
}

checkstyle {
    toolVersion "8.18"
}

checkstyleMain {
    configProperties += ['checkstyle.cache.file': file('checkstyleCacheFile')]
}

