buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.1.RELEASE')
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: 'com.palantir.docker-run'

group = 'dominionweb'
version = '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

mainClassName = 'com.github.nelson54.dominion.web.Application'

jar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}


docker {
    name "${project.group}/${project.name}"
    dockerfile file("Dockerfile")
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.baseName}"])
}

bootRun {
    jvmArgs = "-Xms256m -Xmx2048m"
}

dockerRun {
    name "${project.group}/${project.name}"
    ports '8080:8080'
    daemonize true
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext{
    spring = '2.1.1.RELEASE'
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "$spring"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: "$spring"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "$spring", {
        exclude group: 'org.hibernate', module: 'hibernate-entitymanager'
        exclude group: 'org.hibernate', module: 'hibernate-core'
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "$spring"
    compile group: 'org.springframework.boot',name: 'spring-boot-devtools', version: "$spring"
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "$spring"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: "$spring"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: "$spring"

    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.10.Final'
    //compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: springVersion

    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compile group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'
    compile group: 'io.jsonwebtoken', name:'jjwt', version: '0.7.0'
    //compile 'org.springframework.security:spring-security-crypto:4.2.1.RELEASE'
    //compile 'org.springframework.social:spring-social-core:1.1.0.RELEASE'
    //compile 'org.springframework.social:spring-social-facebook:1.1.1.RELEASE'

    compile 'com.google.guava:guava:17.0'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: '2.4.6' 
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.8' 
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.8'    
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
    compile 'joda-time:joda-time:2.7'
    compile group: 'com.google.inject', name: 'guice', version: '4.0'
    runtime group: 'org.hsqldb', name: 'hsqldb', version: '2.4.1'
    runtime group: 'com.h2database', name: 'h2', version: '1.4.197'
    testCompile 'org.springframework.boot:spring-boot-starter-test:2.1.1.RELEASE'
    testCompile('org.junit.jupiter:junit-jupiter-api:5.3.2')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.3.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.2')
    testCompile 'org.codehaus.groovy:groovy-all:2.4.1'
    testCompile 'org.easymock:easymock:3.4'
    compileOnly 'com.newrelic.agent.java:newrelic-agent:3.14.0'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}



tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

wrapper {
    gradleVersion = '5.1'
}

//applicationDefaultJvmArgs = ["--add-opens", "java.base/jdk.internal.loader=ALL-UNNAMED"]
